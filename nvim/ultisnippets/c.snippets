global !p
from csnippets import inside_include
endglobal

snippet inc "include" bmwA
#include <${1}>
$0
endsnippet

snippet Inc "include" bmwA
#include "${1:`!p snip.rv = snip.basename + ".h"`}"
$0
endsnippet

context "inside_include()"
snippet stdi "stdio.h" wA
stdio.h$0
endsnippet

context "inside_include()"
snippet uni "unistd.h" wA
unistd.h$0
endsnippet

context "inside_include()"
snippet stdl "stdlib.h" wA
stdlib.h$0
endsnippet

context "inside_include()"
snippet str "string.h" wA
string.h$0
endsnippet

snippet struct "struct" bmw
struct ${1} {
	$0
};
endsnippet

snippet main "main()" bmw
int main(int argc, char **argv) {
	$0
	return 0;
}
endsnippet

snippet if "if" bmw
if (${1:${VISUAL}}) {
	${2}
}$0
endsnippet

snippet { "block" mw
{ ${1:${VISUAL}} }$0
endsnippet

snippet while "while" bmw
while (${1}) {
	${2:${VISUAL}}
}
$0
endsnippet

snippet for "for" bmw
for (${1}; ${2}; ${3}) {
	${4:${VISUAL}}
}
$0
endsnippet

snippet do "do-while" bmw
do {
	${2}
} while (${1});
$0
endsnippet

snippet iguard "include guard" bmwA
#ifndef ${1}
#define $1
$0
#endif // $1
endsnippet
